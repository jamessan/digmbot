#!/usr/bin/gawk -f
#
# digmbot
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# version 2 as published by the Free Software Foundation.
#
# Copyright (c) 2013 Daniel Thau <paradigm@bedrocklinux.org>

BEGIN {
	setup()
	loadplugins()
	net = "/inet/tcp/0/" server "/" port
	RS="\r\n"

	print "Connecting to " server "/" port "..."
	send("NICK " nick, net)
	send("USER " nick " x x :" nick, net)

	while (net |& getline) {
		parse()
	}
}

function setup() {
	if (nick == "")      nick      = "digmbot"
	if (owner == "")     owner     = "paradigm"
	if (server == "")    server    = "chat.freenode.net"
	if (port == "")      port      = 6667
	if (plugindir == "") plugindir = "./plugins"
}

function loadplugins() {
	RS="\n"
	print "Loading plugins..."
	while (("ls "plugindir | getline plugin) > 0) {
		file = plugindir "/" plugin
		send("nick "      nick,      file)
		send("owner "     owner,     file)
		send("server "    server,    file)
		send("port "      port,      file)
		send("plugindir " plugindir, file)
		send("plugin "    plugin,    file)
		send("endload",              file)
		close(file,"to")
		file |& getline plugins[plugin]
		close(file)
		print "Plugin \""plugin"\" is looking for regex /" plugins[plugin] "/"
	}
	close("ls "plugindir)
	RS="\r\n"
}

function parse() {
	if ($1 == "PING")
		send("PONG " $2, net)
	else
		print

	user = substr($0,2,index(substr($0,2),"!")-1)
	room = $3
	$0 = substr($0,index(substr($0,2),":")+2)

	if (user == owner && room == nick) {
		if ($1 == "say") {
			send("PRIVMSG " $2 " :" cutfield(2), net)
			return
		}
		if ($1 == "action") {
			send("PRIVMSG " $2 " :""\x01""ACTION " cutfield(2), net)
			return
		}
		if ($1 == "join") {
			send("JOIN " $2, net)
			return
		}
		if ($1 == "part") {
			send("PART " $2, net)
			return
		}
		if ($1 == "reload") {
			delete plugins
			loadplugins()
			return
		}
		if ($1 == "quit")
			exit
	}
	for (plugin in plugins) {
		if ($0 ~ plugins[plugin]) {
			file = plugindir "/" plugin
			print "Triggered plugin: " file
			send("user " user,  file)
			send("room " room,  file)
			send("message " $0, file)
			send("endtrigger",  file)
			close(file,"to")
			file |& getline output
			close(file)
			if (output != "") {
				send("PRIVMSG " room " :" output, net)
				return
			}
		}
	}
}

# skips first n many fields, then returns the rest
# hacky due to backwards-compatibility and hashbang silliness
function cutfield(n) {
	msg = $0
	regex = "^[[:blank:]]*"
	skipfield = "([^[:blank:]]+[[:blank:]]+)"
	for(i=0;i<n;i++)
		regex = regex "" skipfield
	sub(regex,"",msg)
	return msg
}

function send(outstring, file) {
	if (file == net)
		printf "%s\r\n", outstring |& file
	else
		printf "%s\n", outstring |& file
}
